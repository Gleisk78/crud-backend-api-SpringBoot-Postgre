version: '3.8' # Versión de la especificación de Docker Compose

services:
  # Servicio para la base de datos PostgreSQL
  db:
    image: postgres:15 # Usa la imagen oficial de PostgreSQL versión 15
    environment: # Variables de entorno para configurar la base de datos
      POSTGRES_DB: personasdb # Nombre de la base de datos
      POSTGRES_USER: postgres # Nombre de usuario
      POSTGRES_PASSWORD: nueva_clave # Contraseña
    ports:
      - "5432:5432" # Mapea el puerto 5432 del host al puerto 5432 del contenedor de PostgreSQL
    volumes:
      - pgdata:/var/lib/postgresql/data # Volumen persistente para los datos de la base de datos
      - ./sql:/docker-entrypoint-initdb.d # <--- ¡IMPORTANTE! Esta línea debe estar DESCOMENTADA para init.sql
    restart: unless-stopped # Reinicia automáticamente el contenedor si falla

  # Servicio para tu aplicación Spring Boot (el backend)
  backend: #
    build: . # Indica a Docker Compose que construya la imagen desde el Dockerfile en el directorio actual
    ports:
      - "8080:8080" # Mapea el puerto 8080 del host al puerto 8080 del contenedor del backend
    depends_on: # Asegura que el servicio 'db' se inicie antes que el 'backend'
      - db
    environment: # Variables de entorno para tu aplicación Spring Boot
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/personasdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: nueva_clave
      SPRING_JPA_HIBERNATE_DDL_AUTO: update # <--- ¡IMPORTANTE! Vuelve a 'update' para que Hibernate cree/actualice las tablas
    restart: unless-stopped # Reinicia automáticamente el contenedor si falla

# Definición de volúmenes para persistencia de datos
volumes:
  pgdata: # Define el volumen nombrado 'pgdata' para los datos de PostgreSQL
